"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var usePlatformMethods_exports = {};
__export(usePlatformMethods_exports, {
  usePlatformMethods: () => usePlatformMethods
});
module.exports = __toCommonJS(usePlatformMethods_exports);
var import_constants = require("@tamagui/constants"), import_getRect = require("../helpers/getRect"), import_useElementLayout = require("./useElementLayout");
function usePlatformMethods(hostRef) {
  (0, import_constants.useIsomorphicLayoutEffect)(function() {
    var node = hostRef.current;
    if (node) {
      var _node, _node1, _node2;
      (_node = node).measure || (_node.measure = function(callback) {
        return (0, import_useElementLayout.measureLayout)(node, null, callback);
      }), (_node1 = node).measureLayout || (_node1.measureLayout = function(relativeToNode, success) {
        return (0, import_useElementLayout.measureLayout)(node, relativeToNode, success);
      }), (_node2 = node).measureInWindow || (_node2.measureInWindow = function(callback) {
        node && setTimeout(function() {
          var _getRect = (0, import_getRect.getRect)(node), height = _getRect.height, left = _getRect.left, top = _getRect.top, width = _getRect.width;
          callback(left, top, width, height);
        }, 0);
      });
    }
  }, [
    hostRef
  ]);
}
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  usePlatformMethods
});
//# sourceMappingURL=usePlatformMethods.js.map
