"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: !0 });
}, __copyProps = (to, from, except, desc) => {
  if (from && typeof from == "object" || typeof from == "function")
    for (let key of __getOwnPropNames(from))
      !__hasOwnProp.call(to, key) && key !== except && __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: !0 }), mod);
var getElevation_exports = {};
__export(getElevation_exports, {
  getElevation: () => getElevation,
  getSizedElevation: () => getSizedElevation
});
module.exports = __toCommonJS(getElevation_exports);
var import_core = require("@tamagui/core");
function _define_property(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, {
    value,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : obj[key] = value, obj;
}
function _object_spread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {}, ownKeys = Object.keys(source);
    typeof Object.getOwnPropertySymbols == "function" && (ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
      return Object.getOwnPropertyDescriptor(source, sym).enumerable;
    }))), ownKeys.forEach(function(key) {
      _define_property(target, key, source[key]);
    });
  }
  return target;
}
var getElevation = function(size, extras) {
  if (size) {
    var tokens = extras.tokens, token = tokens.size[size], sizeNum = (0, import_core.isVariable)(token) ? +token.val : size;
    return getSizedElevation(sizeNum, extras);
  }
}, getSizedElevation = function(val, param) {
  var theme = param.theme, tokens = param.tokens, num = 0;
  if (val === !0) {
    var _$val = (0, import_core.getVariableValue)(tokens.size.true);
    typeof _$val == "number" ? num = _$val : num = 10;
  } else
    num = +val;
  if (num !== 0) {
    var _ref = [
      Math.round(num / 4 + 1),
      Math.round(num / 2 + 2)
    ], height = _ref[0], shadowRadius = _ref[1], shadow = _object_spread({
      shadowColor: theme.shadowColor,
      shadowRadius,
      shadowOffset: {
        height,
        width: 0
      }
    }, import_core.isAndroid ? {
      elevationAndroid: 2 * height
    } : {});
    return shadow;
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  getElevation,
  getSizedElevation
});
//# sourceMappingURL=getElevation.js.map
