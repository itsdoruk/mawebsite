import { normalizeCSSColor, rgba } from "@tamagui/normalize-css-color";
import { rgba as rgba2 } from "@tamagui/normalize-css-color";
var normalizeColor = function(color, opacity) {
  if (color) {
    if (color[0] === "$" || color.startsWith("var("))
      return color;
    var rgba3 = getRgba(color);
    if (rgba3) {
      var colors = "".concat(rgba3.r, ",").concat(rgba3.g, ",").concat(rgba3.b), _ref;
      return opacity === 1 ? "rgb(".concat(colors, ")") : "rgba(".concat(colors, ",").concat((_ref = opacity ?? rgba3.a) !== null && _ref !== void 0 ? _ref : 1, ")");
    }
    return color;
  }
}, getRgba = function(color) {
  var colorNum = normalizeCSSColor(color);
  if (colorNum != null)
    return rgba(colorNum);
};
export {
  getRgba,
  normalizeColor,
  rgba2 as rgba
};
//# sourceMappingURL=normalizeColor.js.map
