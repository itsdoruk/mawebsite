import { simpleHash } from "@tamagui/helpers";
import { createVariable, isVariable } from "./createVariable";
var cache = /* @__PURE__ */ new WeakMap(), createVariables = function(tokens) {
  var parentPath = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "", isFont = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : !1;
  if (cache.has(tokens))
    return tokens;
  var res = {}, i = 0;
  for (var keyIn in tokens) {
    i++;
    var val = tokens[keyIn], isPrefixed = keyIn[0] === "$", keyWithPrefix = isPrefixed ? keyIn : "$".concat(keyIn), key = isPrefixed ? keyWithPrefix.slice(1) : keyIn;
    if (isVariable(val)) {
      res[key] = val;
      continue;
    }
    var niceKey = simpleHash(key), name = isFont ? niceKey.slice(0, 2) : i;
    if (name = parentPath ? "".concat(parentPath, "-").concat(name) : niceKey, val && typeof val == "object") {
      res[key] = createVariables(tokens[key], name, !1);
      continue;
    }
    var finalValue = isVariable(val) ? val : createVariable({
      val,
      name,
      key: keyWithPrefix
    });
    res[key] = finalValue;
  }
  return cache.set(res, !0), res;
};
export {
  createVariables
};
//# sourceMappingURL=createVariables.js.map
