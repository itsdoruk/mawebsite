import { jsx as _jsx } from "react/jsx-runtime";
import { isClient } from "@tamagui/constants";
import { useLayoutEffect } from "react";
import { THEME_CLASSNAME_PREFIX } from "../constants/constants";
import { Theme } from "./Theme";
var ThemeProvider = function(props) {
  return isClient && useLayoutEffect(function() {
    if (!props.disableRootThemeClass) {
      var cn = "".concat(THEME_CLASSNAME_PREFIX).concat(props.defaultTheme), target = props.themeClassNameOnRoot ? document.documentElement : document.body;
      return target.classList.add(cn), function() {
        target.classList.remove(cn);
      };
    }
  }, [
    props.defaultTheme,
    props.disableRootThemeClass,
    props.themeClassNameOnRoot
  ]), /* @__PURE__ */ _jsx(Theme, {
    className: props.className,
    name: props.defaultTheme,
    // if root class disabled, force class here
    forceClassName: !props.disableRootThemeClass,
    // @ts-expect-error
    _isRoot: !0,
    children: props.children
  });
};
export {
  ThemeProvider
};
//# sourceMappingURL=ThemeProvider.js.map
