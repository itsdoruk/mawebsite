import { jsx as _jsx } from "react/jsx-runtime";
import { useContext } from "react";
import { ComponentContext } from "../contexts/ComponentContext";
function _define_property(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, {
    value,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : obj[key] = value, obj;
}
function _object_spread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {}, ownKeys = Object.keys(source);
    typeof Object.getOwnPropertySymbols == "function" && (ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
      return Object.getOwnPropertyDescriptor(source, sym).enumerable;
    }))), ownKeys.forEach(function(key) {
      _define_property(target, key, source[key]);
    });
  }
  return target;
}
var Configuration = function(props) {
  var current = useContext(ComponentContext);
  return /* @__PURE__ */ _jsx(ComponentContext.Provider, _object_spread({}, current, props));
};
Configuration.displayName = "Configuration";
export {
  Configuration
};
//# sourceMappingURL=Configuration.js.map
