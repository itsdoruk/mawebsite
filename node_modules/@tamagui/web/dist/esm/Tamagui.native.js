import * as Helpers from "@tamagui/helpers";
import { getConfig } from "./config";
import { getAllRules, getAllSelectors, getAllTransforms } from "./helpers/insertStyleRule";
import { mediaState } from "./hooks/useMedia";
import { activeThemeManagers, getThemeManager } from "./hooks/useTheme";
function _class_call_check(instance, Constructor) {
  if (!(instance instanceof Constructor))
    throw new TypeError("Cannot call a class as a function");
}
function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || !1, descriptor.configurable = !0, "value" in descriptor && (descriptor.writable = !0), Object.defineProperty(target, descriptor.key, descriptor);
  }
}
function _create_class(Constructor, protoProps, staticProps) {
  return protoProps && _defineProperties(Constructor.prototype, protoProps), staticProps && _defineProperties(Constructor, staticProps), Constructor;
}
function _define_property(obj, key, value) {
  return key in obj ? Object.defineProperty(obj, key, {
    value,
    enumerable: !0,
    configurable: !0,
    writable: !0
  }) : obj[key] = value, obj;
}
function _object_spread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {}, ownKeys = Object.keys(source);
    typeof Object.getOwnPropertySymbols == "function" && (ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {
      return Object.getOwnPropertyDescriptor(source, sym).enumerable;
    }))), ownKeys.forEach(function(key) {
      _define_property(target, key, source[key]);
    });
  }
  return target;
}
var Tamagui = function() {
  if (process.env.NODE_ENV === "development") {
    var TamaguiManager = /* @__PURE__ */ function() {
      "use strict";
      function TamaguiManager2() {
        _class_call_check(this, TamaguiManager2), _define_property(this, "Helpers", Helpers), _define_property(this, "getThemeManager", getThemeManager);
      }
      return _create_class(TamaguiManager2, [
        {
          key: "activeThemeManagers",
          get: function() {
            return activeThemeManagers;
          }
        },
        {
          key: "mediaState",
          get: function() {
            return _object_spread({}, mediaState);
          }
        },
        {
          key: "config",
          get: function() {
            return getConfig();
          }
        },
        {
          key: "insertedRules",
          get: function() {
            return getAllRules();
          }
        },
        {
          key: "allSelectors",
          get: function() {
            return getAllSelectors();
          }
        },
        {
          key: "allTransforms",
          get: function() {
            return getAllTransforms();
          }
        },
        {
          key: "identifierToValue",
          get: function() {
            return identifierToValue;
          }
        }
      ]), TamaguiManager2;
    }();
    return new TamaguiManager();
  }
}(), identifierToValue = /* @__PURE__ */ new Map(), getValueFromIdentifier = function(identifier) {
  return identifierToValue.get(identifier);
}, setIdentifierValue = function(identifier, value) {
  identifierToValue.set(identifier, value);
};
export {
  Tamagui,
  getValueFromIdentifier,
  setIdentifierValue
};
//# sourceMappingURL=Tamagui.js.map
